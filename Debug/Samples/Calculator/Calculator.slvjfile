/*

   Calculator.java
   
   Silver-J demo java project

*/

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class Calculator
{
	//main method
 public static void main (String args[])
  {
	  try
	    {
	     UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
	    }
	    catch (Exception e)
	    {
	      e.printStackTrace();
	    }
   CalculatorFrame jf= new CalculatorFrame();
   jf.setLocation(200,200);
   jf.setSize(400,300);
   jf.setResizable(false);
   jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
   jf.setVisible(true);
  }
}

//Class Calculator Frame
 class CalculatorFrame extends JFrame
  {
   public CalculatorFrame()
    {
     setTitle("Calculator");
     CalculatorPanel panel=new CalculatorPanel();
     add(panel);
     pack();
    }
  }

 //Class Calculator Panel
 class CalculatorPanel extends JPanel
  {
   public CalculatorPanel()
    {
     setLayout(new BorderLayout());
     setBackground(new Color(60,60,80));
     result=0;
     lastCommand="=";
     start=true;
     display=new JTextField(26);
     display.setFont(new Font("Calibri",Font.PLAIN,26));
     display.setEnabled(false);
     display.setBackground(Color.white);
     add(display,BorderLayout.NORTH);
     ActionListener insert=new InsertAction();
     ActionListener command=new CommandAction();

     panel=new JPanel();
     panel.setBackground(new Color(120,120,140));
     panel.setLayout(new GridLayout(5,5));
     addButton("7",insert);
     addButton("8",insert);
     addButton("9",insert);
     addButton("/",command);
     addButton("4",insert);
     addButton("5",insert);
     addButton("6",insert);
     addButton("*",command);
     addButton("1",insert);
     addButton("2",insert);
     addButton("3",insert);
     addButton("-",command);
     addButton("0",insert);
     addButton(".",insert);
     addButton("=",command);
     addButton("+",command);
     addButton("Clear",new ClearAction());
     addButton("Exit",new ExitAction());
     addButton("%",command);
     addButton("n!",new Factorial());

     add(panel,BorderLayout.CENTER);
    }

   //Class Clear Action
   class ClearAction implements ActionListener
   {
	   public void actionPerformed(ActionEvent e)
	   {
		   display.setText("");
		   start=false;
	   }
   }

   //Class Exit Action
   class ExitAction implements ActionListener
   {
	   public void actionPerformed(ActionEvent e)
	   {
		   System.exit(0);
	   }
   }

   //Factorial function
   public static int getFact(int b)
   {
   	if(b<=1)
   		return 1;
   	else
   		return b*getFact(b-1);
   }

   //Class Factorial
   class Factorial implements ActionListener
   {
	   public void actionPerformed(ActionEvent e)
	   {
		   int n=Integer.parseInt(display.getText());
		   int fact=getFact(n);
		   display.setText(""+fact);
	   }
   }

   //addButton function
   private void addButton(String label,ActionListener listener)
    {
     JButton button=new JButton(label);
     button.setBackground(new Color(200,200,210));
     button.addActionListener(listener);
     panel.add(button);
    }

   //Class Insert Action
   private class InsertAction implements ActionListener
    {
     public void actionPerformed(ActionEvent evt)
      {
       String input=evt.getActionCommand();
       if(start)
        {
         display.setText("");
         start=false;
        }
         display.setText(display.getText()+input);
      }
    }


   //Class Command Action
  private class CommandAction implements ActionListener
   {
    public void actionPerformed(ActionEvent evt)
     {
      String command=evt.getActionCommand();
      if(start)
       {
        if(command.equals("-"))
         {
          display.setText(command);
          start=false;
         }
        else
          {
           lastCommand=command;
          }
        }
      else
       {
        Calculate(Double.parseDouble(display.getText()));
        lastCommand=command;
        start=true;
       }
     }
    }

   public void Calculate(double x)
    {
     if(lastCommand.equals("+"))
       {
         result+=x;
       }
   else if(lastCommand.equals("-"))
          {
           result-=x;
          }
   else if(lastCommand.equals("*"))
          {
           result*=x;
          }
   else if(lastCommand.equals("/"))
          {
           result/=x;
          }
   else if(lastCommand.equals("="))
          {
           result=x;
          }
   else if(lastCommand.equals("%"))
   {
	   result%=x;
   }
    display.setText(""+result);
   }
   
 private JTextField display;
 private JPanel panel;
 private double result;
 private String lastCommand;
 private boolean start;
 
}
